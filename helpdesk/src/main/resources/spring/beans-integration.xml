<?xml version="1.0" encoding="UTF-8"?>

<!--
========================================================================================================================
beans-integration.xml

Copyright (c) 2008-2011 Manning Publications Co.

Willie Wheeler (willie.wheeler@gmail.com)
========================================================================================================================
-->
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:http="http://www.springframework.org/schema/integration/http"
	xmlns:mail="http://www.springframework.org/schema/integration/mail"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	
	<context:property-placeholder location="classpath:/spring/integration.properties" />
	
	
	<!-- =========================================================================================================== -->
	<!-- Inbound                                                                                                     -->
	<!-- =========================================================================================================== -->
	
	<!-- TICKET GATEWAY -->
	
	<!-- Supports ticketing operations (for us, just creation). We define input channels on a per-operation basis
	     using Java 5 annotations. See TicketGateway.java. -->
	<gateway id="ticketGateway" service-interface="com.springinpractice.ch15.helpdesk.integration.TicketGateway" />
	
	
	<!-- XML DATA -->
	
	<!-- For the inbound HTTP channel adapter. This is where the portal sends its tickets. -->
	<!-- Maps within the current servlet mapping (but this can be changed with alwaysUseFullPath). -->
	<beans:bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	
	<http:inbound-channel-adapter
		name="/tickets"
		channel="newTicketChannel"
		supported-methods="POST"
		request-payload-type="com.springinpractice.ch15.helpdesk.model.Ticket" />
	
	
	<!-- INBOUND CUSTOMER-FACING SUPPORT E-MAIL ADDRESS. -->
	<!-- WARNING: THE IMAP CONFIGURATIONS BELOW DELETES MESSAGES ON THE SERVER FOR THE CONFIGURED E-MAIL ACCOUNT!    -->
	<!-- USE A TEST ACCOUNT IF YOU'RE TESTING THE CODE OUT. DO NOT USE YOUR PERSONAL E-MAIL ACCOUNT UNLESS YOU ARE   -->
	<!-- OK WITH LOSING THE ENTIRE CONTENTS OF YOUR INBOX. COURTESY: SCHOOL OF HARD KNOCKS. [WLW]                    -->
	
	<!-- Listen for e-mail. IMAP server must support IMAP IDLE. Client requires JavaMail 1.4.1 or later. -->
	<mail:imap-idle-channel-adapter
		channel="newMailChannel"
		store-uri="${email.store.uri}"
		should-delete-messages="true" />
	
	<!-- Use this if your IMAP server doesn't support IMAP IDLE. -->
	<!--
	<mail:inbound-channel-adapter channel="newMailChannel" store-uri="${email.store.uri}">
		<poller max-messages-per-poll="3">
			<interval-trigger interval="30" time-unit="SECONDS" />
		</poller>
	</mail:inbound-channel-adapter>
	-->
	     
	<channel id="newMailChannel" />
	
	<transformer input-channel="newMailChannel" output-channel="newTicketChannel">
		<beans:bean id="mailToTicketTransformer"
			class="com.springinpractice.ch15.helpdesk.integration.MailToTicketTransformer" />
	</transformer>
	
	
	<!-- NEW TICKET CHANNEL -->
	
	<publish-subscribe-channel id="newTicketChannel" />
	
	
	<!-- =========================================================================================================== -->
	<!-- Outbound                                                                                                    -->
	<!-- =========================================================================================================== -->
	
	<!-- SERVICE ACTIVATOR -->
	
	<service-activator input-channel="newTicketChannel" ref="ticketService" method="createTicket" />
	
	
	<!-- CONFIRMATION E-MAIL -->
	
	<transformer input-channel="newTicketChannel" output-channel="confirmationMailChannel">
		<beans:bean id="ticketToConfirmationMailTransformer"
			class="com.springinpractice.ch15.helpdesk.integration.TicketToMailTransformer"
			p:confirmationFrom="${confirmation.from}"
			p:confirmationSubject="${confirmation.subject}" />
	</transformer>
	
	<!-- Prepare channel for sending confirmation e-mail -->
	<channel id="confirmationMailChannel" />
		
	<mail:outbound-channel-adapter channel="confirmationMailChannel" mail-sender="mailSender" />
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" p:session-ref="mailSession" />
	
	<jee:jndi-lookup id="mailSession" jndi-name="mail/Session" resource-ref="true" />
	
	
	<!-- BASECAMP WEB SERVICE (REST) -->
	
	<!-- http://forum.springsource.org/showthread.php?108156-http-outbound-gateway-does-not-work-with-JAXB2-and-MarshallingHttpMessageConverter&p=358631 -->
	
	<transformer input-channel="newTicketChannel" output-channel="rawBasecampTodoItemChannel">
		<beans:bean id="ticketToBasecampTodoItemTransformer"
			class="com.springinpractice.ch15.helpdesk.integration.TicketToBasecampTodoItemTransformer" />
	</transformer>
	
	<channel id="rawBasecampTodoItemChannel" datatype="com.springinpractice.ch15.helpdesk.model.BasecampTodoItem" />
	
	<header-enricher input-channel="rawBasecampTodoItemChannel" output-channel="enrichedBasecampTodoItemChannel">
		<header name="Content-Type" value="application/xml" />
		
		<!-- http://static.springsource.org/spring/docs/current/spring-framework-reference/html/expressions.html -->
		<!-- No need to use #{...} here since this is the expression attribute, not value -->
		<header name="Authorization"
			expression="'Basic '.concat(new String(T(org.apache.commons.codec.binary.Base64).encodeBase64('${basecamp.api.auth.token}:X'.bytes)))" />
	</header-enricher>
	
	<channel id="enrichedBasecampTodoItemChannel" />
	
	<http:outbound-channel-adapter
		id="postTodoItemChannelAdapter"
		url="${basecamp.api.todoitems.uri}"
		http-method="POST"
		channel="enrichedBasecampTodoItemChannel"
		extract-payload="true"
		message-converters="messageConverterList" />

	<util:list id="messageConverterList">
		<beans:ref bean="marshallingConverter" />
	</util:list>
	
	<beans:bean id="marshallingConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
		p:marshaller-ref="jaxb2Marshaller"
		p:unmarshaller-ref="jaxb2Marshaller" />
	
	<oxm:jaxb2-marshaller id="jaxb2Marshaller">
		<oxm:class-to-be-bound name="com.springinpractice.ch15.helpdesk.model.BasecampTodoItem" />
	</oxm:jaxb2-marshaller>
	
</beans:beans>
